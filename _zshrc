# ———————————————————————————————
# ターミナルのエンコード
# ———————————————————————————————
case $TERM in
    linux) LANG=C ;;
    *) LANG=ja_JP.UTF-8 ;;
esac

# ———————————————————————————————
# プロンプト
# ———————————————————————————————
autoload -Uz compinit && compinit
autoload -Uz vcs_info
setopt prompt_subst

zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' unstagedstr '!'
zstyle ':vcs_info:git:*' stagedstr '+'
zstyle ':vcs_info:*' formats ' %c%u(%s:%b)'
zstyle ':vcs_info:*' actionformats ' %c%u(%s:%b|%a)'
precmd () {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}

PROMPT="%B%F{green}❯❯%1(v|%1v|)%f%b %B%F{blue}%~%f%b
%B%F{green}❯%f%b "

# ———————————————————————————————
# 言語設定
# ———————————————————————————————
# export LANG=ja_JP.UTF-8
# export LANG=en_US

# ———————————————————————————————
# 補完
# ———————————————————————————————
autoload -Uz compinit
compinit

## 補完侯補をハイライトして、メニューから選択
### select=2: 補完候補を一覧から選択 ただし、補完候補が2つ以上なければすぐに補完
zstyle ':completion:*:default' menu select=2

## 補完候補に色を付ける
### "": 空文字列はデフォルト値を使うという意味
zstyle ':completion:*:default' list-colors ""

# 色を使用出来るようにする
autoload -Uz colors
colors

# 補完関数の表示を強化する
zstyle ':completion:*' verbose yes
zstyle ':completion:*' completer _expand _complete _match _prefix _approximate _list _history
zstyle ':completion:*:messages' format '%F{YELLOW}%d'$DEFAULT
zstyle ':completion:*:warnings' format '%F{RED}No matches for:''%F{YELLOW} %d'$DEFAULT
zstyle ':completion:*:descriptions' format '%F{YELLOW}completing %B%d%b'$DEFAULT
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:descriptions' format '%F{yellow}Completing %B%d%b%f'$DEFAULT

# マッチ種別を別々に表示
zstyle ':completion:*' group-name ''

# ———————————————————————————————
# エイリアス
# ———————————————————————————————
# linux
alias la='ls -la --color'
alias ll='ls -l --color'
alias back='cd $OLDPWD'
alias home='cd $HOME'

# docker
alias dup='docker-compose up'
alias ddown='docker-compose down'
alias dr='docker-compose run --rm'
alias dd='docker ps -aq -f "status=exited" | xargs docker rm -v && docker images -q -f "dangling=true" | xargs docker rmi && docker volume ls -qf dangling=true | xargs docker volume rm'
alias di='docker images'
alias dp='docker ps'
alias sp='docker-compose run --rm  web bundle exec rspec'

# vim
# alias ctags="`brew --prefix`/bin/ctags"

# git
alias gl='git log --all --oneline --graph'
alias gs='git add -A && git commit -am '

# ———————————————————————————————
# mysql起動
#mysql.server start
alias mysqlbk='mysqldump -u root -p -x --all-databases >'
alias mysqlre='mysql -u root -p < '

# ———————————————————————————————
# redis-server起動
#brew services start redis

# ———————————————————————————————
# shパス指定
# ———————————————————————————————
export PATH="$HOME/dotfiles/shfiles:$PATH"

# ———————————————————————————————
# MySQL
# ———————————————————————————————
# brew services restart mysql@5.7
 export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"
 export LDFLAGS="-L/usr/local/opt/mysql@5.7/lib"
 export CPPFLAGS="-I/usr/local/opt/mysql@5.7/include"
 export PKG_CONFIG_PATH="/usr/local/opt/mysql@5.7/lib/pkgconfig"

# ———————————————————————————————
# ruby パス指定
# ———————————————————————————————
#export PATH="~/.rbenv/shims:$PATH"

# ———————————————————————————————
# rbenv パス指定
# ———————————————————————————————
 export PATH="$HOME/.rbenv/bin:$PATH"
 eval "$(rbenv init -)"

# ———————————————————————————————
# flutter パス指定
# ———————————————————————————————
 export PATH="/development/flutter/bin:$PATH"

# ———————————————————————————————
# RUST パス指定
# ———————————————————————————————
  export PATH="$HOME/.cargo/bin:$PATH"

# ———————————————————————————————
# FUCK パス指定
# ———————————————————————————————
  eval $(thefuck --alias)

# ———————————————————————————————
# Android Studioパス指定
# ———————————————————————————————
 export ANDROID_HOME=$HOME/Android/Sdk
 export ANDROID_ROOT=$HOME/Android/Sdk
 export PATH=$PATH:$ANDROID_HOME/tools
 export PATH=$PATH:$ANDROID_HOME/tools/bin
 export PATH=$PATH:$ANDROID_HOME/platform-tools
 export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/bin/java
 export JAVA_CMD=/usr/lib/jvm/java-8-openjdk-amd64/bin/java
# export PATH=/usr/lib/jvm/java-8-openjdk-amd64/bin:$PATH
 export JAVA_OPTS='-XX:+IgnoreUnrecognizedVMOptions --add-modules java.se.ee'
 export SDKMANAGER_OPTS="--add-modules java.se.ee"
# ———————————————————————————————
# THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
 export SDKMAN_DIR="/home/scopfox/.sdkman"
 [[ -s "/home/scopfox/.sdkman/bin/sdkman-init.sh" ]] && source "/home/scopfox/.sdkman/bin/sdkman-init.sh"

# ———————————————————————————————
# tmux起動
# ———————————————————————————————
if [ "$TMUX" = "" ]; then tmux -u; fi
